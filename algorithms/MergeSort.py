import math

# Масив ділиться на два підмасиви
# для кожного підмасива викликається рекурсивно
# *на момент виходу з рекурсії підмасиви відсортовані наступними кроками
# якщо обидва підмасива непусті, береться менше з їх паступних елементів
# коли один масив закінчується, елементи іншого доставляються в кінець
#      [4, 7, 3, 1, 2, 8, 6, 9]
#   [4, 7, 3, 1]      [2, 8, 6, 9]
#  [4, 7] [3, 1]     [2, 8] [6, 9]
# [4] [7] [3] [1]   [2] [8] [6] [9]
#  [4, 7] [1, 3]     [2, 8] [6, 9]
#   [1, 3, 4, 7]      [2, 6, 8, 9]
#      [1, 2, 3, 4, 6, 7, 8, 9]

def mergeSort(arr):
  if len(arr) > 1:
    mid = len(arr) // 2
    L = arr[:mid]
    R = arr[mid:]

    mergeSort(L)
    mergeSort(R)
    # на час виходу з рекурсійного виклику підмасиви вже відсортовані

    i = j = k = 0

    while i < len(L) and j < len(R):
      if L[i] < R[j]:
        arr[k] = L[i]
        i += 1
      else:
        arr[k] = R[j]
        j += 1
      k += 1

    while i < len(L):
      arr[k] = L[i]
      i += 1
      k += 1
    
    while j < len(R):
      arr[k] = R[j]
      j += 1
      k += 1

